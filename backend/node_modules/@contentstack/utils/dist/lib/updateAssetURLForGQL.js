export function updateAssetURLForGQL(gqlResponse) {
    var _a;
    try {
        var response = gqlResponse === null || gqlResponse === void 0 ? void 0 : gqlResponse.data;
        for (var contentType in response) {
            var entry = response[contentType]; // page_json_rte
            var _loop_1 = function (field) {
                var fieldData = entry[field];
                if (fieldData && fieldData.embedded_itemsConnection) { // rte field with embedded items e.g rte_2
                    var edges = (_a = fieldData === null || fieldData === void 0 ? void 0 : fieldData.embedded_itemsConnection) === null || _a === void 0 ? void 0 : _a.edges;
                    edges.forEach(function (edge) {
                        var _a, _b, _c;
                        var node = edge.node;
                        if ((node === null || node === void 0 ? void 0 : node.url) && (node === null || node === void 0 ? void 0 : node.filename)) {
                            if (!((_a = node === null || node === void 0 ? void 0 : node.system) === null || _a === void 0 ? void 0 : _a.uid))
                                throw new Error('Asset UID not found in the response');
                            var correspondingAsset = (_c = (_b = fieldData === null || fieldData === void 0 ? void 0 : fieldData.json) === null || _b === void 0 ? void 0 : _b.children) === null || _c === void 0 ? void 0 : _c.find(function (child) { return child.attrs['asset-uid'] === node.system.uid; });
                            correspondingAsset.attrs['asset-link'] = node.url;
                        }
                    });
                }
            };
            for (var field in entry) {
                _loop_1(field);
            }
        }
    }
    catch (error) {
        console.error('Error in updating asset URL for GQL response', error);
    }
}
//# sourceMappingURL=updateAssetURLForGQL.js.map